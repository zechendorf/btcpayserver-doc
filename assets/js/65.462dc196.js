(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{590:function(t,s,a){"use strict";a.r(s);var e=a(26),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"extended-manual-setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extended-manual-setup"}},[t._v("#")]),t._v(" Extended Manual Setup")]),t._v(" "),a("p",[t._v("This document lists steps for manually deploying BTCPay Server and additional related components. Following these steps is likely to take a long time. A shorter and more pragmatic approach is to use a "),a("a",{attrs:{href:"https://github.com/btcpayserver/btcpayserver-docker",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker based deployment"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("h4",{attrs:{id:"not-recommended-for-production-use"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#not-recommended-for-production-use"}},[t._v("#")]),t._v(" Not recommended for production use")]),t._v(" "),a("p",[t._v("Manual installation is NOT recommended for production use unless you are very confident with your Operating System and Bitcoin security expertise. If you are unsure use the docker deployment or one of the other "),a("RouterLink",{attrs:{to:"/Deployment/"}},[t._v("deployment options")]),t._v(".")],1)]),t._v(" "),a("h2",{attrs:{id:"installation-steps-overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation-steps-overview"}},[t._v("#")]),t._v(" Installation Steps Overview")]),t._v(" "),a("p",[t._v("The instructions in this article have been tested on Ubuntu 18.04. They should be applicable to other Linux based distributions. They are also based on all components being on the same host or virtual machine. It is possible to split the components across different hosts but these instructions don't describe that.")]),t._v(" "),a("p",[t._v("An example hostname of "),a("code",[t._v("mainnet.demo.btcpayserver.org")]),t._v(" has been used in certain places in these instructions. It needs to be replaced with the hostname you are using for your BTCPay Server.")]),t._v(" "),a("h3",{attrs:{id:"security"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#security"}},[t._v("#")]),t._v(" Security")]),t._v(" "),a("p",[t._v("If you do use these instructions to install a BTCPay Server connected to the Bitcoin mainnet then at a minimum you should understand how the wallet mechanisms work. It's highly recommended to read the two articles below and ask questions if anything is not clear.")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/FAQ/FAQ-Wallet/"}},[t._v("BTCPay Wallet FAQ")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/LightningNetwork/"}},[t._v("Lightning Network and BTCPay (first section)")])],1)]),t._v(" "),a("p",[t._v("As an additional aid below is a lit of iptables rules and instructions which should include all the ports that need to be open. "),a("strong",[t._v("NO WARRANTY")]),t._v(". Use at your own risk, "),a("strong",[t._v("including risk of locking yourself out")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" iptables.txt\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Generated by iptables-save v1.6.1 on Mon May 27 18:48:11 2019\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n-A INPUT -i lo -j ACCEPT\n-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT\n-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT\n-A INPUT -p tcp -m tcp --dport 443 -j ACCEPT\n-A INPUT -p tcp -m tcp --dport 8333 -j ACCEPT\n-A INPUT -p tcp -m tcp --dport 9375 -j ACCEPT\n-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\nCOMMIT\n# Completed on Mon May 27 18:48:11 2019\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables-restore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" iptables.txt\n")])])]),a("p",[t._v("At this point if you are still connected to you ssh session it's a good sign. If not the rules are temporary and you can use whatever mechanism you have to remotely reboot your server and try again.")]),t._v(" "),a("p",[t._v("The rules have now been temporarily applied. To apply the rules automatically each time your server starts use the "),a("code",[t._v("iptables-persistent")]),t._v(" package.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" iptables-persistent\n")])])]),a("p",[t._v("If you subsequently change the iptables rules and want to save them across reboots use the command below.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" netfilter-persistent save\n")])])]),a("h2",{attrs:{id:"unprivileged-user"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unprivileged-user"}},[t._v("#")]),t._v(" Unprivileged user")]),t._v(" "),a("p",[t._v("These instructions configure everything to run under an unprivileged user called "),a("code",[t._v("admin")]),t._v(".  Create this user before proceeding:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useradd")]),t._v(" -m -s /dev/null admin\n")])])]),a("h3",{attrs:{id:"prerequisites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[t._v("#")]),t._v(" Prerequisites")]),t._v(" "),a("ul",[a("li",[t._v("Postgresql")]),t._v(" "),a("li",[t._v("Tor")]),t._v(" "),a("li",[t._v("NGINX and Let's Encrypt")])]),t._v(" "),a("h3",{attrs:{id:"application-components"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-components"}},[t._v("#")]),t._v(" Application Components")]),t._v(" "),a("ul",[a("li",[t._v("Bitcoin Daemon"),a("sup",[t._v("1")])]),t._v(" "),a("li",[t._v("NBXplorer"),a("sup",[t._v("1,2")])]),t._v(" "),a("li",[t._v("BTCPay Server"),a("sup",[t._v("1,2")])]),t._v(" "),a("li",[t._v("Lightning Network Daemon (lnd)"),a("sup",[t._v("2")])]),t._v(" "),a("li",[t._v("Ride The Lightning (RTL)"),a("sup",[t._v("2")])])]),t._v(" "),a("p",[a("sup",[t._v("1")]),t._v(" The bare minimum install of a BTCPay server only requires these items. Using a bare minimum configuration reduces the functionality: no lightning payments, no auto-renewal of TLS certificates, less reliable data store, less capable of handling NAT and more.")]),t._v(" "),a("p",[a("sup",[t._v("2")]),t._v(" Built from source code (note if you'd like to build the Bitcoin Daemon from source the instruction are "),a("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/blob/master/doc/build-unix.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(").")]),t._v(" "),a("h2",{attrs:{id:"postgresql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postgresql"}},[t._v("#")]),t._v(" Postgresql")]),t._v(" "),a("p",[t._v("Postgresql can be used by BTCPay Server in place of the default SQLite file based storage. It's also possible to use MySQL.")]),t._v(" "),a("h5",{attrs:{id:"-install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-install"}},[t._v("#")]),t._v(" 🚚 Install")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" postgresql postgresql-contrib\n")])])]),a("h5",{attrs:{id:"✒️-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#✒️-configuration"}},[t._v("#")]),t._v(" ✒️ Configuration")]),t._v(" "),a("p",[t._v("Covered in BTCPay Server Configuration.")]),t._v(" "),a("h5",{attrs:{id:"-check"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-check"}},[t._v("#")]),t._v(" 👍 Check")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ psql --version\npsql "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PostgreSQL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Ubuntu "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.8")]),t._v("-0ubuntu0.18.04.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl status postgresql\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres psql\npsql "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Ubuntu "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.8")]),t._v("-0ubuntu0.18.04.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v("\nType "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"help"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" help.\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("postgres")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# \\q")]),t._v("\n")])])]),a("h2",{attrs:{id:"tor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tor"}},[t._v("#")]),t._v(" Tor")]),t._v(" "),a("p",[t._v("Tor can be used by the following components to provide enhanced privacy and/or help with NAT traversal:")]),t._v(" "),a("ul",[a("li",[t._v("Bitcoin-core Daemon")]),t._v(" "),a("li",[t._v("Lightning Network Daemon (lnd).")])]),t._v(" "),a("h5",{attrs:{id:"-install-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-install-2"}},[t._v("#")]),t._v(" 🚚 Install")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" apt-transport-https\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/apt/sources.list "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (and append two lines below)")]),t._v("\ndeb https://deb.torproject.org/torproject.org bionic main\ndeb-src https://deb.torproject.org/torproject.org bionic main\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" gpg --import\n~$ gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" apt-key "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" update\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" tor deb.torproject.org-keyring\n")])])]),a("h5",{attrs:{id:"✒️-configuration-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#✒️-configuration-2"}},[t._v("#")]),t._v(" ✒️ Configuration")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/tor/torrc  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (and uncomment two lines below)")]),t._v("\nControlPort "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9051")]),t._v("\nCookieAuthentication "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl restart tor\n")])])]),a("p",[t._v("Covered further in Bitcoin and Lightning Network Daemon sections.")]),t._v(" "),a("h5",{attrs:{id:"-check-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-check-2"}},[t._v("#")]),t._v(" 👍 Check")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("netstat")]),t._v(" -tlnp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" tor "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (lines below correspond to the tor control port and SOCKS proxy)")]),t._v("\ntcp        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:9050          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:*               LISTEN      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1376")]),t._v("/tor\ntcp        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:9051          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:*               LISTEN      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1376")]),t._v("/tor\n")])])]),a("h2",{attrs:{id:"nginx-and-lets-encrypt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-and-lets-encrypt"}},[t._v("#")]),t._v(" NGINX and Let's Encrypt")]),t._v(" "),a("p",[t._v("NGINX is used as a web server to manage HTTP requests to BTCPay Server and Ride The Lightning. Paired with Let's Encrypt it allows seamless procurement and renewal of a TLS certificate for your BTCPay Server instance.")]),t._v(" "),a("p",[t._v("Let's Encrypt is a free service for procuring and renewing TLS certificates. The service comes with scripts that can be installed to automatically manage the whole process.")]),t._v(" "),a("h5",{attrs:{id:"-install-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-install-3"}},[t._v("#")]),t._v(" 🚚 Install")]),t._v(" "),a("h5",{attrs:{id:"1-install-nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#1-install-nginx"}},[t._v("#")]),t._v(" 1. Install NGINX.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nginx\n")])])]),a("h5",{attrs:{id:"2-install-lets-encrypt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#2-install-lets-encrypt"}},[t._v("#")]),t._v(" 2. Install Let's Encrypt")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" add-apt-repository ppa:certbot/certbot\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" update\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" certbot python-certbot-nginx\n")])])]),a("h5",{attrs:{id:"✒️-configuration-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#✒️-configuration-3"}},[t._v("#")]),t._v(" ✒️ Configuration")]),t._v(" "),a("h5",{attrs:{id:"1-lets-encrypt-tls-certificate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#1-lets-encrypt-tls-certificate"}},[t._v("#")]),t._v(" 1. Let's Encrypt TLS certificate")]),t._v(" "),a("p",[t._v("You must create an A or AAAA record for "),a("strong",[t._v("<your domain name>")]),t._v(" that points to the IP address of your server instance.\nIf your server is behind NAT then you need to forward port 80 to your instance.")]),t._v(" "),a("p",[t._v("The "),a("strong",[t._v("certbot")]),t._v(" script works by checking for a specific file on the web server hosting the requested domain. If it can't get the file the TLS certificate won't be issued. If the initial attempt fails it will be periodically re-attempted or you can simply re-run the command.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" certbot --nginx -d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your domain name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (e.g: sudo certbot --nginx -d mainnet.demo.btcpayserver.org)")]),t._v("\n")])])]),a("h5",{attrs:{id:"2-add-nginx-configuration-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#2-add-nginx-configuration-file"}},[t._v("#")]),t._v(" 2. Add NGINX configuration file")]),t._v(" "),a("p",[t._v("The configuration file below has been copied from the BTCPay Server docker install.")]),t._v(" "),a("p",[t._v('Search for "mainnet.demo.btcpayserver.org" and replace it with your own domain name.')]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" default.conf\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the\n# scheme used to connect to this server\nmap $http_x_forwarded_proto $proxy_x_forwarded_proto {\n  default $http_x_forwarded_proto;\n  ''      $scheme;\n}\n# If we receive X-Forwarded-Port, pass it through; otherwise, pass along the\n# server port the client connected to\nmap $http_x_forwarded_port $proxy_x_forwarded_port {\n  default $http_x_forwarded_port;\n  ''      $server_port;\n}\n# If we receive Upgrade, set Connection to \"upgrade\"; otherwise, delete any\n# Connection header that may have been passed to this server\nmap $http_upgrade $proxy_connection {\n  default upgrade;\n  '' close;\n}\n# Apply fix for very long server names\nserver_names_hash_bucket_size 128;\n# Prevent Nginx Information Disclosure\nserver_tokens off;\n# Default dhparam\n# Set appropriate X-Forwarded-Ssl header\nmap $scheme $proxy_x_forwarded_ssl {\n  default off;\n  https on;\n}\n\ngzip_types text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;\nlog_format vhost '$host $remote_addr - $remote_user [$time_local] '\n                 '\"$request\" $status $body_bytes_sent '\n                 '\"$http_referer\" \"$http_user_agent\"';\naccess_log off;\n# HTTP 1.1 support\nproxy_http_version 1.1;\nproxy_buffering off;\nproxy_set_header Host $http_host;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection $proxy_connection;\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\nproxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;\nproxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;\nproxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;\nproxy_buffer_size          128k;\nproxy_buffers              4 256k;\nproxy_busy_buffers_size    256k;\nclient_header_buffer_size 500k;\nlarge_client_header_buffers 4 500k;\nhttp2_max_field_size       500k;\nhttp2_max_header_size      500k;\n# Mitigate httpoxy attack (see README for details)\nproxy_set_header Proxy \"\";\n\nserver {\n        server_name mainnet.demo.btcpayserver.org;\n        listen 80 ;\n        access_log /var/log/nginx/access.log vhost;\n        return 301 https://$host$request_uri;\n}\nserver {\n        client_max_body_size 100M;\n        server_name mainnet.demo.btcpayserver.org;\n        listen 443 ssl http2 ;\n        access_log /var/log/nginx/access.log vhost;\n        ssl_protocols TLSv1.2;\n        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';\n        ssl_prefer_server_ciphers on;\n        ssl_session_timeout 5m;\n        ssl_session_cache shared:SSL:50m;\n        ssl_session_tickets off;\n        ssl_certificate /etc/letsencrypt/live/mainnet.demo.btcpayserver.org/cert.pem;\n        ssl_certificate_key /etc/letsencrypt/live/mainnet.demo.btcpayserver.org/privkey.pem;\n        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;\n        ssl_stapling on;\n        ssl_stapling_verify on;\n                ssl_trusted_certificate /etc/letsencrypt/live/mainnet.demo.btcpayserver.org/fullchain.pem;\n        add_header Strict-Transport-Security \"max-age=31536000\" always;\n        #include /etc/nginx/vhost.d/default;\n\n        # Here is the main BTCPay Server application\n        location / {\n                proxy_pass http://127.0.0.1:23000;\n        }\n\n        # Include the next two stanzas if and only if you want to expose your lightning gRPC & RPC interfaces to the internet\n        location /lnrpc.Lightning {\n                grpc_pass grpcs://127.0.0.1:10009;\n        }\n\n        location /lnd-rest/btc/ {\n                rewrite ^/lnd-rest/btc/(.*) /$1 break;\n                proxy_pass https://127.0.0.1:8080/;\n        }\n\n        # Include this stanza if you are planning to set up Ride The Lightning (RTL)\n        location /rtl/ {\n                proxy_pass http://127.0.0.1:3000/rtl/;\n        }\n}\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" default.conf /etc/nginx/conf.d\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl restart nginx\n")])])]),a("h5",{attrs:{id:"-check-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-check-3"}},[t._v("#")]),t._v(" 👍 Check")]),t._v(" "),a("h5",{attrs:{id:"1-check-lets-encrypt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#1-check-lets-encrypt"}},[t._v("#")]),t._v(" 1. Check Let's Encrypt")]),t._v(" "),a("p",[t._v("It can be a little bit tricky to get everything set up correctly for the Let's Encrypt script to work correctly. Some additional commands are listed below to help with any troubleshooting.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" certbot certificates\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nFound the following certs:\n  Certificate Name: mainnet.demo.btcpayserver.org\n    Domains: mainnet.demo.btcpayserver.org\n    Expiry Date: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("-08-10 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":00:31+00:00 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VALID: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("79")]),t._v(" days"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Certificate Path: /etc/letsencrypt/live/mainnet.demo.btcpayserver.org/fullchain.pem\n    Private Key Path: /etc/letsencrypt/live/mainnet.demo.btcpayserver.org/privkey.pem\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /etc/cron.d/certbot "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (check the cron job exists)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" */12 * * * root "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" -x /usr/bin/certbot -a "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -d /run/systemd/system "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" perl -e "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sleep int(rand(43200))'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" certbot -q renew\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tail")]),t._v(" /var/log/letsencrypt/letsencrypt.log "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (check for problems)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("-05-22 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(":36:36,062:DEBUG:certbot.main:certbot version: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.31")]),t._v(".0\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" certbot renew --dry-run "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (test renewal)")]),t._v("\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n** DRY RUN: simulating "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'certbot renew'")]),t._v(" close to cert expiry\n**          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("The "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" certificates below have not been saved."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nCongratulations, all renewals succeeded. The following certs have been renewed:\n  /etc/letsencrypt/live/mainnet.demo.btcpayserver.org/fullchain.pem "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n** DRY RUN: simulating "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'certbot renew'")]),t._v(" close to cert expiry\n**          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("The "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" certificates above have not been saved."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n")])])]),a("h5",{attrs:{id:"2-check-nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#2-check-nginx"}},[t._v("#")]),t._v(" 2. Check NGINX.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" nginx -v\n nginx version: nginx/1.14.0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("netstat")]),t._v(" -tlnp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" nginx\n nginx version: nginx/1.14.0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" journalctl -xe --unit nginx --follow\n-- Unit nginx.service has finished starting up.\n")])])]),a("h2",{attrs:{id:"bitcoin-daemon"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bitcoin-daemon"}},[t._v("#")]),t._v(" Bitcoin Daemon")]),t._v(" "),a("p",[t._v("The gateway to the Bitcoin network for BTCPay Server components.")]),t._v(" "),a("h5",{attrs:{id:"-install-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-install-4"}},[t._v("#")]),t._v(" 🚚 Install")]),t._v(" "),a("h5",{attrs:{id:"1-download-the-latest-binaries-from-a-trusted-source-such-as-httpsbitcoincoreorgendownload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#1-download-the-latest-binaries-from-a-trusted-source-such-as-httpsbitcoincoreorgendownload"}},[t._v("#")]),t._v(" 1. Download the latest binaries from a trusted source such as "),a("a",{attrs:{href:"https://bitcoincore.org/en/download/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://bitcoincore.org/en/download/"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://bitcoincore.org/bin/bitcoin-core-0.19.1/bitcoin-0.19.1-x86_64-linux-gnu.tar.gz\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://bitcoincore.org/bin/bitcoin-core-0.19.1/SHA256SUMS.asc\n")])])]),a("h5",{attrs:{id:"2-verify-the-authenticity-of-the-downloads"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#2-verify-the-authenticity-of-the-downloads"}},[t._v("#")]),t._v(" 2. Verify the authenticity of the downloads")]),t._v(" "),a("p",[t._v("The Bitcoin Core code signing key is currently:")]),t._v(" "),a("blockquote",[a("p",[t._v('"Wladimir J. van der Laan (Bitcoin Core binary release signing key) '),a("a",{attrs:{href:"mailto:laanwj@gmail.com"}},[t._v("laanwj@gmail.com")]),t._v('")\npublic key: 01EA5486DE18A882D4C2684590C8019E36C2E964')])]),t._v(" "),a("p",[t._v("It's advisable to double check the signing key corresponds with other available sources. A good one is "),a("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/tree/master/contrib/verifybinaries",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/bitcoin/bitcoin/tree/master/contrib/verifybinaries"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ gpg --receive-key 0x01EA5486DE18A882D4C2684590C8019E36C2E964\n~$ gpg --verify SHA256SUMS.asc\n gpg: Good signature from "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Wladimir J. van der Laan (Bitcoin Core binary release signing key) <laanwj@gmail.com>"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("unknown"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n~$ sha256sum --ignore-missing -c SHA256SUMS.asc\n bitcoin-0.19.1-x86_64-linux-gnu.tar.gz: OK\n")])])]),a("h5",{attrs:{id:"3-install-the-binaries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#3-install-the-binaries"}},[t._v("#")]),t._v(" 3. Install the binaries")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" zxf bitcoin-0.19.1-x86_64-linux-gnu.tar.gz\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushd")]),t._v(" bitcoin-0.19.1/bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" bitcoind bitcoin-cli /usr/bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("popd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n~$ bitcoind --version\nBitcoin Core version v0.19.1\n")])])]),a("h5",{attrs:{id:"4-create-the-configuration-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#4-create-the-configuration-file"}},[t._v("#")]),t._v(" 4. Create the configuration file")]),t._v(" "),a("p",[t._v("An example configuration file is available on the Bitcoin Core repository at https://github.com/bitcoin/bitcoin/blob/master/share/examples/bitcoin.conf.")]),t._v(" "),a("p",[t._v("Create a bitcoin.conf file to suit your needs. An example file that is suitable for BTCPay Server is shown below. This configuration does not prune blocks which means as of May 2019 you will require 235 GB for the Bitcoin blockchain.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" bitcoin.conf\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mainnet=1\nserver=1                              # need RPC for btcpay.\nrpcbind=127.0.0.1                     # loopback is default for 0.18.0 but no harm making sure.\nwhitelist=127.0.0.1                   # for nbxplorer.\nrpcallowip=127.0.0.1/32               # loopback is default but again no harm.\ndisablewallet=1                       # btcpay does not host a bitcoin wallet.\nzmqpubrawblock=tcp://127.0.0.1:28332  # needed for lightning.\nzmqpubrawtx=tcp://127.0.0.1:28333     # needed for lightning.\n")])])]),a("p",[t._v("Copy the file to the directory specified in the systemd service file and assign read permissions to all users.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /etc/bitcoin\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" bitcoin.conf /etc/bitcoin\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("644")]),t._v(" /etc/bitcoin/bitcoin.conf\n")])])]),a("h5",{attrs:{id:"5-create-a-systemd-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#5-create-a-systemd-service"}},[t._v("#")]),t._v(" 5. Create a systemd service")]),t._v(" "),a("p",[t._v("An example systemd service file is available in the Bitcoin Core  repository at https://raw.githubusercontent.com/bitcoin/bitcoin/master/contrib/init/bitcoind.service.")]),t._v(" "),a("p",[t._v("Edit the service file depending on your needs.")]),t._v(" "),a("p",[t._v("In the example below the "),a("strong",[t._v("User")]),t._v(" and "),a("strong",[t._v("Group")]),t._v(" have been changed and the permissions on the "),a("strong",[t._v("ConfigurationDirectory")]),t._v(" have been modified to make it usable without needing to explicitly set ownership see "),a("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/pull/15995",target:"_blank",rel:"noopener noreferrer"}},[t._v("this issue"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" bitcoind.service\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[Unit]\nDescription=Bitcoin daemon\nAfter=network.target\n\n[Service]\nExecStart=/usr/bin/bitcoind -daemon \\\n                            -pid=/run/bitcoind/bitcoind.pid \\\n                            -conf=/etc/bitcoin/bitcoin.conf \\\n                            -datadir=/var/lib/bitcoind\n\n# Process management\n####################\n\nType=forking\nPIDFile=/run/bitcoind/bitcoind.pid\nRestart=on-failure\n\n# Directory creation and permissions\n####################################\nUser=admin\nGroup=admin\n\n# /run/bitcoind\nRuntimeDirectory=bitcoind\nRuntimeDirectoryMode=0710\n\n# /etc/bitcoin\nConfigurationDirectory=bitcoin\nConfigurationDirectoryMode=0755\n\n# /var/lib/bitcoind\nStateDirectory=bitcoind\nStateDirectoryMode=0710\n\n# Hardening measures\n####################\n# Provide a private /tmp and /var/tmp.\nPrivateTmp=true\n\n# Mount /usr, /boot/ and /etc read-only for the process.\nProtectSystem=full\n\n# Disallow the process and all of its children to gain\n# new privileges through execve().\nNoNewPrivileges=true\n\n# Use a new /dev namespace only populated with API pseudo devices\n# such as /dev/null, /dev/zero and /dev/random.\nPrivateDevices=true\n\n# Deny the creation of writable and executable memory mappings.\nMemoryDenyWriteExecute=true\n\n# Deny access to /home.\nProtectHome=true\n\n[Install]\nWantedBy=multi-user.target\n")])])]),a("p",[t._v("Once the service file is ready complete the commands below.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" bitcoind.service /etc/systemd/system\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" bitcoind\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start bitcoind\n")])])]),a("h5",{attrs:{id:"6-create-a-symbolic-link-to-the-bitcoind-cookie-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#6-create-a-symbolic-link-to-the-bitcoind-cookie-file"}},[t._v("#")]),t._v(" 6. Create a symbolic link to the bitcoind cookie file")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("bitcoin-cli")]),t._v(" client needs to authenticate to "),a("code",[t._v("bitcoind")]),t._v(" for RPC calls. The easiest way to allow this is to create a symbolic link to the cookie file.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s /var/lib/bitcoind/.cookie .bitcoin/.cookie\n")])])]),a("p",[t._v("It's not vital to perform this step but if not done then every "),a("code",[t._v("bitcoin-cli")]),t._v(" command needs to specify the path to the cookie file as below.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ bitcoin-cli -rpccookiefile"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/lib/bitcoind/.cookie getblockchaininfo\n")])])]),a("h5",{attrs:{id:"-check-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-check-4"}},[t._v("#")]),t._v(" 👍 Check")]),t._v(" "),a("p",[t._v("It will take Bitcoin anywhere from a few hours to a few days to synchronise the blockchain. Use any or all of the commands below to check its status.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl status bitcoind\nActive: active "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("running"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" since Thu "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("-05-23 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":23:48 UTC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 21min ago\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tail")]),t._v(" /var/lib/bitcoind/debug.log -f\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20800000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("log2_work")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90.667233")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("tx")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("416658838")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("date")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2019-05-23T18:46:27Z'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("progress")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.000000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("cache")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(".6MiB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("103874txo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("warning")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'32 of last 100 blocks have unexpected version'")]),t._v("\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ bitcoin-cli getblockchaininfo\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chain"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blocks"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("577444")]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"headers"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("577444")]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h5",{attrs:{id:"-check-tor-and-bitcoin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-check-tor-and-bitcoin"}},[t._v("#")]),t._v(" 👍 Check Tor and Bitcoin")]),t._v(" "),a("p",[t._v("If Tor was installed prior to the Bitcoin Daemon then it should have automatically registered and begun listening on a torv2 onion address (note support for torv3 onion addresses is in the "),a("a",{attrs:{href:"https://gist.github.com/laanwj/4fe8470881d7b9499eedc48dc9ef1ad1#file-addrv2-mediawiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("pipeline"),a("OutboundLink")],1),t._v(").")]),t._v(" "),a("p",[t._v("The easiest way to get your Bitcoin Daemon torv2 address is from the log file:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /var/lib/bitcoind/debug.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" onion\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("-05-23T18:24:22Z tor: Got "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" ID 4d4al7v4hj5p7bb6, advertising "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" 4d4al7v4hj5p7bb6.onion:8333\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("-05-23T18:24:22Z AddLocal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("4d4al7v4hj5p7bb6.onion:8333,4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("To change your onion address:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" /var/lib/bitcoind/onion_private_key\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl restart bitcoind\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /var/lib/bitcoind/debug.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" onion\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("-05-23T19:06:30Z tor: Got "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" ID zrzoqb4e5bengdju, advertising "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" zrzoqb4e5bengdju.onion:8333\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("-05-23T19:06:30Z AddLocal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zrzoqb4e5bengdju.onion:8333,4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("To check your onion address from a remote host with tor installed:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ torsocks --shell\n~$ telnet 4d4al7v4hj5p7bb6.onion "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8333")]),t._v("\n Trying "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.42")]),t._v(".42.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n Connected to "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.42")]),t._v(".42.0.\n Escape character is "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^]'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v("\n")])])]),a("p",[t._v("To connect another "),a("code",[t._v("bitcoind")]),t._v(" instance to your new node:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ bitcoin-cli addnode "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4d4al7v4hj5p7bb6.onion"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add"')]),t._v("\n~$ bitcoin-cli getaddednodeinfo\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"addednode"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4d4al7v4hj5p7bb6.onion"')]),t._v(",\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"connected"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"addresses"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"address"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4d4al7v4hj5p7bb6.onion:8333"')]),t._v(",\n       "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"connected"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"outbound"')]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"nbxplorer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nbxplorer"}},[t._v("#")]),t._v(" NBXplorer")]),t._v(" "),a("p",[t._v("NBXplorer is a dotnet core application that monitors the Bitcoin blockchain for transactions of interest to your BTCPay Server.")]),t._v(" "),a("h5",{attrs:{id:"-install-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-install-5"}},[t._v("#")]),t._v(" 🚚 Install")]),t._v(" "),a("h5",{attrs:{id:"1-install-dotnet-core"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#1-install-dotnet-core"}},[t._v("#")]),t._v(" 1. Install dotnet core")]),t._v(" "),a("p",[t._v("Check "),a("a",{attrs:{href:"https://dotnet.microsoft.com/download/dotnet-core",target:"_blank",rel:"noopener noreferrer"}},[t._v("download link for latest version"),a("OutboundLink")],1),t._v(" (.Net Core 3.1 at the time of writing)")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" dpkg -i packages-microsoft-prod.deb\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" add-apt-repository universe\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" apt-transport-https\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" dotnet-sdk-3.1\n~$ dotnet --version\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1")]),t._v(".1\n")])])]),a("h5",{attrs:{id:"2-build-nbxplorer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#2-build-nbxplorer"}},[t._v("#")]),t._v(" 2. Build NBXplorer")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" src\n~/src$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/dgarage/NBXplorer\n~/src$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" NBXplorer\n~/src/NBXplorer$ ./build.sh\n")])])]),a("h5",{attrs:{id:"3-create-a-systemd-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#3-create-a-systemd-service"}},[t._v("#")]),t._v(" 3. Create a systemd service")]),t._v(" "),a("p",[t._v("An example systemd service file is shown below. Adjust the paths, User and Group accordingly.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" nbxplorer.service\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[Unit]\nDescription=NBXplorer daemon\nRequires=bitcoind.service\nAfter=bitcoind.service\n\n[Service]\nWorkingDirectory=/home/admin/src/NBXplorer\nExecStart=/home/admin/src/NBXplorer/run.sh\nUser=admin\nGroup=admin\nType=simple\nPIDFile=/run/nbxplorer/nbxplorer.pid\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" nbxplorer.service /etc/systemd/system\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" nbxplorer\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start nbxplorer\n")])])]),a("h5",{attrs:{id:"-check-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-check-5"}},[t._v("#")]),t._v(" 👍 Check")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" journalctl -xe --unit nbxplorer --follow\nMay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(":13:35 btc run.sh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8065")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": info: Configuration:  Data Directory: /home/admin/.nbxplorer/Main\nMay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(":13:35 btc run.sh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8065")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": info: Configuration:  Configuration File: /home/admin/.nbxplorer/Main/settings.config\nMay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(":13:35 btc run.sh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8065")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": info: Configuration:  Network: Mainnet\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nMay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(":20:04 btc run.sh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8065")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": info: Events:         BTC: New block 0000000000000000000c405ba5df5f5533359a4393247a0c52d26c458d4dd989 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("577449")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("If it doesn't start correctly stop the service and run the application directly to get any error messages.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl stop nbxplorer\n~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushd")]),t._v(" ./src/NBXplorer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ./run.sh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("popd")]),t._v("\n")])])]),a("h5",{attrs:{id:"-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-update"}},[t._v("#")]),t._v(" 🚨 Update")]),t._v(" "),a("p",[t._v("Updating could break things. Be careful on a live system.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl stop nbxplorer\n~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushd")]),t._v(" ~/src/NBXplorer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ./build.sh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("popd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start nbxplorer\n")])])]),a("h2",{attrs:{id:"btcpay-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#btcpay-server"}},[t._v("#")]),t._v(" BTCPay Server")]),t._v(" "),a("p",[t._v("Like NBXplorer the BTCPay Server application is also dotnet core. The install steps assume dotnet core was installed in the\nprevious step.")]),t._v(" "),a("h5",{attrs:{id:"-install-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-install-6"}},[t._v("#")]),t._v(" 🚚 Install")]),t._v(" "),a("h5",{attrs:{id:"1-build-btcpay-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#1-build-btcpay-server"}},[t._v("#")]),t._v(" 1. Build BTCPay Server")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" src\n~/src$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/btcpayserver/btcpayserver.git\n~/src$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" btcpayserver\n~/src/btcpayserver$ ./build.sh\n")])])]),a("h5",{attrs:{id:"2-create-postgresql-database"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#2-create-postgresql-database"}},[t._v("#")]),t._v(" 2. Create Postgresql Database.")]),t._v(" "),a("p",[t._v("By default BTCPay Server will store data in a single SQLite file. A more robust option is to use Postgresql which requires the appropriate database and user exist.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres psql\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("postgres")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create database btcpay;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("postgres")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create user btcpay with encrypted password 'urpassword';")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("postgres")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# grant all privileges on database btcpay to btcpay;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("postgres")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#\\q")]),t._v("\n")])])]),a("h5",{attrs:{id:"3-create-a-configuration-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#3-create-a-configuration-file"}},[t._v("#")]),t._v(" 3. Create a configuration file")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" btcpay.config\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('### Database ###\npostgres=User ID=btcpay;Password=urpassword;Host=localhost;Port=5432;Database=btcpay;\n\n### Application ###\nrootPath="/btcpay"  # if you\'d like to run BTCPay Server along side other apps\n')])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /etc/btcpay\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" btcpay.config /etc/btcpay\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("644")]),t._v(" /etc/btcpay/btcpay.config\n")])])]),a("h5",{attrs:{id:"4-create-a-systemd-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#4-create-a-systemd-service"}},[t._v("#")]),t._v(" 4. Create a systemd service.")]),t._v(" "),a("p",[t._v("An example systemd service file is shown below. Adjust the paths, User and Group accordingly.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" btcpay.service\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[Unit]\nDescription=BTCPay Server\nRequires=nbxplorer.service\nAfter=nbxplorer.service\n\n[Service]\nWorkingDirectory=/home/admin/src/btcpayserver\nExecStart=/home/admin/src/btcpayserver/run.sh --conf=/etc/btcpay/btcpay.config\nUser=admin\nGroup=admin\nType=simple\nPIDFile=/run/btcpayserver/btcpayserver.pid\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" btcpay.service /etc/systemd/system\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" btcpay\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start btcpay\n")])])]),a("h5",{attrs:{id:"-check-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-check-6"}},[t._v("#")]),t._v(" 👍 Check")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" journalctl -xe --unit btcpay --follow\n-- The start-up result is RESULT.\nMay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":01:25 btc run.sh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10263")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": info: Configuration:  Data Directory: /home/admin/.btcpayserver/Main\nMay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":01:25 btc run.sh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10263")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": info: Configuration:  Configuration File: /etc/btcpay/btcpay.config\nMay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":01:25 btc run.sh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10263")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": info: Configuration:  Network: Mainnet\n")])])]),a("p",[t._v("If it doesn't start correctly stop the service and run the application directly to get any error messages.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl stop btcpay\n~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushd")]),t._v(" ~/src/btcpayserver --conf"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/btcpay/btcpay.config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ./run.sh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("popd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("An example of checking information in the database.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres psql\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("postgres")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# \\connect btcpay;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("btcpay")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# \\dt")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("btcpay")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# select * from "Invoices";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("btcpay")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# \\q")]),t._v("\n")])])]),a("h5",{attrs:{id:"-update-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-update-2"}},[t._v("#")]),t._v(" 🚨 Update")]),t._v(" "),a("p",[t._v("Updating could break things. Be careful on a live system.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl stop btcpay\n~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushd")]),t._v(" ~/src/btcpayserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ./build.sh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("popd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start btcpay\n")])])]),a("h2",{attrs:{id:"lightning-network-daemon-lnd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lightning-network-daemon-lnd"}},[t._v("#")]),t._v(" Lightning Network Daemon (lnd)")]),t._v(" "),a("h5",{attrs:{id:"-install-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-install-7"}},[t._v("#")]),t._v(" 🚚 Install")]),t._v(" "),a("h5",{attrs:{id:"1-install-go"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#1-install-go"}},[t._v("#")]),t._v(" 1. Install Go")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://dl.google.com/go/go1.12.3.linux-amd64.tar.gz\n~$ sha256sum go1.12.3.linux-amd64.tar.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" -F "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{ print "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" }'")]),t._v("\n 3924819eed16e55114f02d25d03e77c916ec40b7fd15c8acb5838b63135b03df\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -C /usr/local -xzf go1.12.3.linux-amd64.tar.gz\n~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v(":/usr/local/go/bin:"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOPATH")]),t._v("/bin\n~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOPATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("~/gocode\n~$ go version\n go version go1.12.3 linux/amd64\n")])])]),a("h5",{attrs:{id:"2-build-and-install-lnd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#2-build-and-install-lnd"}},[t._v("#")]),t._v(" 2. Build and install lnd")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ go get -d github.com/lightningnetwork/lnd\n~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOPATH")]),t._v("/src/github.com/lightningnetwork/lnd\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# installs to /home/admin/gocode/bin which is $GOPATH/bin")]),t._v("\n~$ lnd --version\nlnd version "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.6")]),t._v(".1-beta "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("v0.6.1-beta-12-gf8c824fb1d6c5ef8524148f59ea5650af65af98b\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOPATH")]),t._v("/bin/lnd "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOPATH")]),t._v("/bin/lncli /usr/bin\n")])])]),a("h5",{attrs:{id:"3-create-a-symbolic-link-to-the-bitcoin-configuration-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#3-create-a-symbolic-link-to-the-bitcoin-configuration-file"}},[t._v("#")]),t._v(" 3. Create a symbolic link to the Bitcoin configuration file.")]),t._v(" "),a("p",[t._v("lnd looks for bitcoin.conf in a specific location to get necessary RPC and zeromq details.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s /etc/bitcoin/bitcoin.conf ~/.bitcoin/bitcoin.conf\n")])])]),a("h5",{attrs:{id:"4-create-a-configuration-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#4-create-a-configuration-file"}},[t._v("#")]),t._v(" 4. Create a configuration file.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" lnd.conf\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[Application Options]\ndatadir=/var/lib/lnd/data\ntlscertpath=/var/lib/lnd/tls.cert\ntlskeypath=/var/lib/lnd/tls.key\nlogdir=/var/lib/lnd/logs\nmaxlogfiles=3\nmaxlogfilesize=10\n#externalip=1.1.1.1 # change to your public IP address if required.\nalias=i_luv_btcpay\nlisten=0.0.0.0:9375\n\n[Bitcoin]\nbitcoin.active=1\nbitcoin.node=bitcoind\nbitcoin.mainnet=true\n\n[tor]\ntor.active=true\ntor.v3=true\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /etc/lnd\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /var/lib/lnd\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" admin:admin -R /var/lib/lnd\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" lnd.conf /etc/lnd\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("644")]),t._v(" /etc/lnd/lnd.conf\n")])])]),a("h5",{attrs:{id:"5-create-a-systemd-service-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#5-create-a-systemd-service-2"}},[t._v("#")]),t._v(" 5. Create a systemd service")]),t._v(" "),a("p",[t._v("An example systemd service file is shown below. Adjust the paths, User and Group accordingly.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" lnd.service\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[Unit]\nDescription=LND Lightning Network Daemon\nRequires=bitcoind.service\nAfter=bitcoind.service\n\n[Service]\nExecStart=/usr/bin/lnd --configfile=/etc/lnd/lnd.conf\nExecStop=/usr/bin/lncli --lnddir /var/lib/lnd stop\nPIDFile= /run/lnd/lnd.pid\n\nUser=admin\nGroup=admin\n\nType=simple\nKillMode=process\nTimeoutStartSec=60\nTimeoutStopSec=60\nRestart=always\nRestartSec=60\n\n[Install]\nWantedBy=multi-user.target\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" lnd.service /etc/systemd/system\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" lnd\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start lnd\n")])])]),a("h5",{attrs:{id:"✒️-configuration-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#✒️-configuration-4"}},[t._v("#")]),t._v(" ✒️ Configuration")]),t._v(" "),a("p",[a("strong",[t._v("Running a Bitcoin Lightning daemon requires a hot wallet on your BTCPay Server.")])]),t._v(" "),a("p",[t._v("Repeating for emphasis.")]),t._v(" "),a("p",[a("strong",[t._v("Running a Bitcoin Lightning daemon requires a hot wallet on your BTCPay Server.")])]),t._v(" "),a("p",[t._v("With Bitcoin the protocol has evolved and deterministic key derivation means the keys for your wallet can be kept in a different location to the BTCPay Server. Lightning daemons do not have this facility. Any Bitcoins committed or received in your lightning channels are controlled by private keys that are on your BTCPay Server.")]),t._v(" "),a("h5",{attrs:{id:"1-create-a-symbolic-link-to-the-lnd-data-directory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#1-create-a-symbolic-link-to-the-lnd-data-directory"}},[t._v("#")]),t._v(" 1. Create a symbolic link to the lnd data directory")]),t._v(" "),a("p",[t._v("The install steps above use "),a("code",[t._v("/var/lib/lnd")]),t._v(" as the data directory rather than the default "),a("code",[t._v("/home/user/.lnd")]),t._v(". In order to save typing when using the "),a("code",[t._v("lncli")]),t._v(" client it's useful to add a symbolic directory link.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s /var/lib/lnd .lnd\n")])])]),a("h5",{attrs:{id:"2-create-lightning-wallet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#2-create-lightning-wallet"}},[t._v("#")]),t._v(" 2. Create Lightning wallet")]),t._v(" "),a("p",[t._v("The first time the lnd is started a new wallet must be created and the backup seed safely recorded (if someone else gets your seed they can steal your funds so keep it safe).")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ lncli create\nInput wallet password:\nConfirm wallet password:\n---------------BEGIN LND CIPHER SEED---------------\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(". above      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(". catch    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(". start     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(". tape\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(". sound      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(". friend   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(". water     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(". royal\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(". solid     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(". poet    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(". wisdom   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(". match\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(". virtual   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(". zero    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(". slender  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(". thrive\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(". idle      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(". catch   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(". robot    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(". clay\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(". resemble  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(". angry   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(". work     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("until")]),t._v("\n---------------END LND CIPHER SEED-----------------\n")])])]),a("p",[t._v("Note that if the symbolic directory link from the previous step "),a("strong",[t._v("was not")]),t._v(" created the command is:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("lncli --lnddir /var/lib/lnd create\n")])])]),a("h5",{attrs:{id:"3-unlock-the-wallet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#3-unlock-the-wallet"}},[t._v("#")]),t._v(" 3. Unlock the wallet")]),t._v(" "),a("p",[t._v("Every time lnd is restarted the wallet needs to be unlocked. This is not ideal for a BTCPay Server that can is designed to run unattended but Lighting is still in its infancy.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ lncli unlock\n")])])]),a("h5",{attrs:{id:"-check-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-check-7"}},[t._v("#")]),t._v(" 👍 Check")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ lncli getinfo\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"version"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.6.1-beta commit=v0.6.1-beta-12-gf8c824fb1d6c5ef8524148f59ea5650af65af98b"')]),t._v(",\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Check the service:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" journalctl -xe --unit lnd --follow\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nMay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(":21:54 btc lnd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8067")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("-05-24 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(":21:54.683 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("INF"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" DISC: Broadcasting batch of "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v(" new announcements\nMay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(":23:24 btc lnd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8067")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("-05-24 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(":23:24.683 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("INF"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" DISC: Broadcasting batch of "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("163")]),t._v(" new announcements\n")])])]),a("h5",{attrs:{id:"-check-tor-and-lnd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-check-tor-and-lnd"}},[t._v("#")]),t._v(" 👍 Check Tor and LND")]),t._v(" "),a("p",[t._v("As with the Bitcoin daemon if Tor is installed and the configuration file enables it (the one above does) then lnd will automatically register an onion address. In lnd's case torv3 addresses are supported.")]),t._v(" "),a("p",[t._v("The torv3 onion address below is a lot longer than the torv2 one from the Bitcoin daemon section (16 characters compared to 56 characters).")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ lncli getinfo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" onion\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"029b0e3c05595074afcffdca0fb22fb68a95a9c4698dd20962f647de4891eceabd@liyuvwbbycrvvuzcrsd5rq7svwckabejlsymcxiwzkj3smvlwcsqpjyd.onion:9735"')]),t._v("\n")])])]),a("p",[t._v("The Tor address created by lnd can be used to connect to other Lighting peers on the Tor network. The Tor address can work in parallel with an IPv4 or IPv6 address. To register one of those make sure the "),a("code",[t._v("externalip")]),t._v(" is set in the lnd configuration file.")]),t._v(" "),a("h5",{attrs:{id:"-update-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-update-3"}},[t._v("#")]),t._v(" 🚨 Update")]),t._v(" "),a("p",[t._v("Updating could break things. Be careful on a live system.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl stop lnd\n~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v(":/usr/local/go/bin:"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOPATH")]),t._v("/bin\n~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOPATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("~/gocode\n~$ go get -d github.com/lightningnetwork/lnd\n~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOPATH")]),t._v("/src/github.com/lightningnetwork/lnd\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# installs to /home/admin/gocode/bin which is $GOPATH/bin")]),t._v("\n~$ lnd --version\nlnd version "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.6")]),t._v(".1-beta "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("v0.6.1-beta-12-gf8c824fb1d6c5ef8524148f59ea5650af65af98b\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOPATH")]),t._v("/bin/lnd "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOPATH")]),t._v("/bin/lncli /usr/bin\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start lnd\n")])])]),a("p",[t._v("After the daemon has been restarted the wallet needs to be unlocked:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ lncli unlock\n")])])]),a("p",[t._v("If RTL is installed it may have stopped when lnd disappeared so it will also need to be restarted.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start rtl\n")])])]),a("h2",{attrs:{id:"ride-the-lightning-rtl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ride-the-lightning-rtl"}},[t._v("#")]),t._v(" Ride The Lightning (RTL)")]),t._v(" "),a("p",[t._v("Ride the Lightning is a Node.js application to manage your Lightning peers, channels, wallet etc.")]),t._v(" "),a("p",[t._v("The advantage of the work that has gone into BTCPay Server is that the RTL web page can be controlled and accessed in the same manner as the BTCPay site.")]),t._v(" "),a("h5",{attrs:{id:"-install-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-install-8"}},[t._v("#")]),t._v(" 🚚 Install")]),t._v(" "),a("h5",{attrs:{id:"1-install-dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#1-install-dependencies"}},[t._v("#")]),t._v(" 1. Install dependencies")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nodejs build-essential "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v("\n")])])]),a("h5",{attrs:{id:"2-build-rtl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#2-build-rtl"}},[t._v("#")]),t._v(" 2. Build RTL")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/src\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/ShahanaFarooqui/RTL.git\n~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" RTL\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),a("h5",{attrs:{id:"3-create-a-configuration-file-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#3-create-a-configuration-file-2"}},[t._v("#")]),t._v(" 3. Create a configuration file")]),t._v(" "),a("p",[t._v("A sample RTL.conf configuration file is available "),a("a",{attrs:{href:"https://github.com/Ride-The-Lightning/RTL/blob/master/sample-RTL-Config.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" RTL.conf\n")])])]),a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[SSO]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("rtlSSO")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("rtlCookiePath")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/var/lib/rtl")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("logoutRedirectLink")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/login")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[Authentication]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("macaroonPath")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/var/lib/lnd/data/chain/bitcoin/mainnet")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("lndConfigPath")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/etc/lnd/lnd.conf")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nodeAuthType")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("CUSTOM")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("rtlPass")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("password")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[Settings]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("flgSidenavOpened")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("flgSidenavPinned")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("menu")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("Vertical")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("menuType")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("Regular")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("theme")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("dark-blue")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("satsToBTC")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("bitcoindConfigPath")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/etc/bitcoin/bitcoin.conf")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("enableLogging")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("3000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("lndServerUrl")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("https://localhost:8080/v1")]),t._v("\n")])])]),a("p",[t._v("Note that RTL has different behaviour and requirements compared to the other services documented in theses instructions, specifically:")]),t._v(" "),a("ol",[a("li",[t._v("The configuration file needs to exist in RTL's data directory,")]),t._v(" "),a("li",[t._v("The RTL process writes to the configuration file. The main change it will do is convert any cleartext password set with "),a("code",[t._v("rtlPass")]),t._v(" to a hashed version with "),a("code",[t._v("rtlPassHashed")]),t._v(".")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /var/lib/rtl\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" admin:admin -R /var/lib/rtl\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" ~/RTL.conf /var/lib/rtl\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("644")]),t._v(" /var/lib/rtl/RTL.conf\n")])])]),a("h5",{attrs:{id:"4-create-a-systemd-service-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#4-create-a-systemd-service-2"}},[t._v("#")]),t._v(" 4. Create a systemd service")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" rtl.service\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('[Unit]\nDescription=Ride The Lightning\nRequires=lnd.service\nAfter=lnd.service\n\n[Service]\nEnvironment="RTL_CONFIG_PATH=/var/lib/rtl/RTL.conf"\nWorkingDirectory=/var/lib/rtl\nExecStart=/usr/bin/node /home/admin/src/RTL/rtl\nUser=admin\nGroup=admin\nType=simple\nPIDFile=/run/rtl/rtl.pid\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n')])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" rtl.service /etc/systemd/system\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" rtl\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start rtl\n")])])]),a("h5",{attrs:{id:"-check-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-check-8"}},[t._v("#")]),t._v(" 👍 Check")]),t._v(" "),a("p",[t._v("Check the service:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" journalctl -xe --unit rtl --follow\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nMay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(":38:01 btc node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8072")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Console:\nMay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(":38:01 btc node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8072")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": Transactions: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1558726681366")]),t._v(": INFO: Transaction Received: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("If it doesn't start correctly stop the service and run the application directly to get any error messages.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl stop rtl\n~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RTL_CONFIG_PATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/lib/rtl/RTL.conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushd")]),t._v(" ~/src/RTL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" node rtl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("popd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nServer is up and running, please "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v(" the UI at http://localhost:3000\n")])])]),a("h5",{attrs:{id:"-update-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-update-4"}},[t._v("#")]),t._v(" 🚨 Update")]),t._v(" "),a("p",[t._v("Updating could break things. Be careful on a live system.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl stop rtl\n~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushd")]),t._v(" ~/src/RTL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("popd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start rtl\n")])])]),a("h2",{attrs:{id:"-the-end"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-the-end"}},[t._v("#")]),t._v(" 🏁 The End")])])}),[],!1,null,null,null);s.default=n.exports}}]);